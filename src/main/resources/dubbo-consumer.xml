<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


    <!-- 应用配置,用于配置当前应用应用信息,不管提供者还是消费者 -->
    <!-- name：必填(服务治理) ** 当前应用名称,用于注册中心计算应用间依赖关系,消费者和提供者应用名最好不要一样,此项不是匹配条件 -->
    <!-- organization：可选(服务治理) ** 组织名称,BU或者部门,建议写死 -->
    <!-- version：可选 (服务治理) ** 当前版本 -->
    <!-- owner：可选(服务治理) ** 应用负责人 ,填写负责人公司邮箱前缀 -->
    <!-- environment ：可选(服务治理) ** 应用环境，如：develop/test/product，不同环境使用不同的缺省值，以及作为只用于开发测试功能的限制条件 -->
    <dubbo:application environment="test"
                       name="DubboTestProject"
                       organization="HLW" owner="daijie"
                       version="0.0.1"/>


    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <!-- address：必填(服务发现) ** 注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port，不同集群的注册中心，请配置多个<dubbo:registry>标签 -->
    <!--<dubbo:registry file="${catalina.base}/logs/loyalty/dubbo.cache" address="${dubbo.registry.address}"/>-->
    <dubbo:registry address="zookeeper://172.20.3.151:2181"/>

    <!-- 监控中心配置 -->
    <!-- protocol：可选 (服务治理) ** 监控中心协议，如果为protocol="registry"，表示从注册中心发现监控中心地址，否则直连监控中心。 -->
    <dubbo:monitor protocol="registry"/>

    <!--电视信息服务-->
    <dubbo:reference check="false" id="tvInfoService" interface="com.konka.itf.soa.service.TVInfoService" timeout="4000" version="0.0.1"/>
    <!--邮件服务-->
    <dubbo:reference check="false" id="emailService" interface="com.konka.soa.api.EmailService" timeout="10000" version="0.0.1"/>
    <!--日志服务-->
    <dubbo:reference check="false" id="operBlogService" interface="com.konka.soa.api.OperBlogService" timeout="10000" version="0.0.1"/>
    <!-- OperLog业务类注入dubbo服务 operBlogService -->
    <bean id="operLog" class="com.konka.business.OperLog">
        <property name="operBlogService" ref="operBlogService" />
    </bean>



</beans>